package com.demo1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class StudentDAO {
	private String jdbcURL = "jdbc:mysql://localhost:3306/demo1";
	private String jdbcUsername = "root";
	private String jdbcPassword = "123456";
	private Connection jdbcConnection;
	private static final String insertStudentSQL = "insert into student(stuName, stuAddress) values(?,?)";
	private static final String selectStudentSQL = "select id,stuName,stuAddress from student where id=?";
	private static final String updateStudentSQL = "update student set stuName=?, stuAddress=? where id=?";
	private static final String deleteStudentSQL = "delete from student where id=?";
	private static final String listStudentSQL = "select * from student";

	protected void connect() throws SQLException {
		if (jdbcConnection == null || jdbcConnection.isClosed()) {
			try {
				Class.forName("com.mysql.cj.jdbc.Driver");
			} catch (ClassNotFoundException e) {
				throw new SQLException(e);
			}
			jdbcConnection = DriverManager.getConnection(jdbcURL, jdbcUsername, jdbcPassword);
		}
	}

	protected void disconnect() throws SQLException {
		if (jdbcConnection != null && !jdbcConnection.isClosed()) {
			jdbcConnection.close();
		}
	}

	// Insert record
	public boolean insertStudent(UserPOJO pojo) throws SQLException {
		connect();
		PreparedStatement statement = jdbcConnection.prepareStatement(insertStudentSQL);
		statement.setString(1, pojo.getName());
		statement.setString(2, pojo.getAddress());
		Boolean status = statement.executeUpdate() > 0;
		statement.close();
		disconnect();
		return status;
	}
	
	// delete record
		public boolean deleteStudent(int id) throws ClassNotFoundException, SQLException {
			connect();
			PreparedStatement statement = jdbcConnection.prepareStatement(deleteStudentSQL);
			statement.setInt(1, id);
			boolean rowDeleted = statement.executeUpdate() > 0;
			statement.close();
			disconnect();
			return rowDeleted;
		}

	// update record
	public boolean updateStudent(UserPOJO pojo) throws ClassNotFoundException, SQLException {
		connect();
		PreparedStatement statement = jdbcConnection.prepareStatement(updateStudentSQL);
		statement.setString(1, pojo.getName());
		statement.setString(2, pojo.getAddress());
		statement.setInt(3, pojo.getId());
		boolean rowUpdated = statement.executeUpdate() > 0;
		statement.close();
		disconnect();
		return rowUpdated;
	}

	// list record by id
	public UserPOJO selectStudent(int id) throws SQLException {
		UserPOJO pojo = null;
		connect();

		PreparedStatement statement = jdbcConnection.prepareStatement(selectStudentSQL);
		statement.setInt(1, id);
		ResultSet resultSet = statement.executeQuery();
		while (resultSet.next()) {
			String stuName = resultSet.getString("stuName");
			String stuAddress = resultSet.getString("stuAddress");
			pojo = new UserPOJO(id, stuName, stuAddress);
		}
		resultSet.close();
		statement.close();
		disconnect();

		return pojo;
	}

	// list all record
	public List<UserPOJO> listStudent() throws SQLException {
		List<UserPOJO> listStudents = new ArrayList<>();
		connect();

		PreparedStatement statement = jdbcConnection.prepareStatement(listStudentSQL);

		ResultSet resultSet = statement.executeQuery();
		while (resultSet.next()) {
			int stuID = resultSet.getInt("id");
			String stuName = resultSet.getString("stuName");
			String stuAddress = resultSet.getString("stuAddress");
			UserPOJO pojo = new UserPOJO(stuID, stuName, stuAddress);
			listStudents.add(pojo);
		}
		resultSet.close();
		statement.close();
		disconnect();

		return listStudents;
	}
}
